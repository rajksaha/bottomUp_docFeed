<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.DoctorFollowUpSettingMapper">

	<insert id="create" parameterType="doctorFollowUpSetting">

		<selectKey keyProperty="followUpSettingID" resultType="String" order="BEFORE">
			select UUID()
		</selectKey>
		INSERT INTO `doctor_follow_up_setting`(
			`followUpSettingID`,
			`doctorID`,
			`invID`,
			`patientTypeID`,
			`displayOrder`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{followUpSettingID},
			#{doctorID},
			#{invID},
			#{patientTypeID},
			#{displayOrder},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);


	</insert>
	
	<update id="update" parameterType="doctorFollowUpSetting">
		UPDATE `doctor_follow_up_setting`
		SET
		`doctorID` = #{doctorID},
		`invID` = #{invID},
		`patientTypeID` = #{patientTypeID},
		`displayOrder` = #{displayOrder},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE followUpSettingID = #{followUpSettingID}
	</update>

	<update id="updateDisplayOrder" parameterType="java.util.List">
		<foreach collection="list" item="followUp" index="index" separator=";">
			update doctor_follow_up_setting set displayOrder = #{followUp.displayOrder} where followUpSettingID = #{followUp.followUpSettingID}
		</foreach>
	</update>

	<select id="getByID" parameterType="string" resultType="doctorFollowUpSetting">
		SELECT
			`followUpSettingID`,
			`doctorID`,
			`invID`,
			`patientTypeID`,
			`displayOrder`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		FROM `doctor_follow_up_setting`

		WHERE followUpSettingID = #{followUpSettingID}
	</select>

	<select id="getByParam" parameterType="map" resultType="doctorFollowUpSetting">
		SELECT
		df.`followUpSettingID`,
		df.`doctorID`,
		df.`invID`,
		df.`displayOrder`,
		ci.name AS invName,
		df.`patientTypeID`,
		df.`updatedBy`,
		df.`updatedOn`,
		df.`createdBy`,
		df.`createdOn`
		FROM doctor_feed.`doctor_follow_up_setting` df
		JOIN doctor_feed.content_inv ci ON ci.invID = df.invID
		WHERE 1 = 1
		<if test="followUpSettingID != null">
			AND df.followUpSettingID = #{followUpSettingID}
		</if>
		<if test="patientTypeID != null">
			AND df.patientTypeID = #{patientTypeID}
		</if>
		<if test="doctorID != null">
			AND df.doctorID = #{doctorID}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy} ASC
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM doctor_follow_up_setting
		WHERE 1=1
		<if test="followUpSettingID != null">
			AND followUpSettingID = #{followUpSettingID}
		</if>
	</delete>


</mapper>