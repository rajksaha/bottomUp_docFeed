<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.ContentDrugMapper">

	<insert id="create" parameterType="contentDrug" useGeneratedKeys="true" keyProperty="drugID" >

		INSERT INTO `content_drug`(
			`typeID`,
			`genericID`,
			`companyID`,
			`drugName`,
			`strength`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{typeID},
			#{genericID},
			#{companyID},
			#{drugName},
			#{strength},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);


	</insert>
	
	<update id="update" parameterType="contentDrug">
		UPDATE `content_drug`
		SET
		`typeID` = #{typeID},
		`genericID` = #{genericID},
		`companyID` = #{companyID},
		`drugName` =#{drugName},
		`strength` = #{strength},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE drugID = #{drugID}
	</update>

	<update id="updateGeneric" parameterType="map">
		UPDATE `content_drug`
		SET
		`genericID` = #{genericID},
		`updatedBy` = #{updatedBy},
		`updatedOn` = NOW()
		WHERE drugID = #{drugID}
	</update>

	<select id="getByID" parameterType="long" resultType="contentDrug">
		SELECT
			`drugID`,
			`typeID`,
			`genericID`,
			`companyID`,
			`drugName`,
			`strength`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		FROM `content_drug`

		WHERE drugID = #{drugID}
	</select>

	<select id="getByName" parameterType="string" resultType="contentDrug">
		SELECT
		`drugID`,
		`typeID`,
		`genericID`,
		`companyID`,
		`drugName`,
		`strength`,
		`updatedBy`,
		`updatedOn`,
		`createdBy`,
		`createdOn`
		FROM `content_drug`
		WHERE drugName = #{drugName}
	</select>

	<select id="getCountByParam" parameterType="string" resultType="int">
		SELECT COUNT(CD.drugID)
		FROM `content_drug` CD
		LEFT JOIN doctor_feed.content_drug_generic DG ON CD.genericID = DG.genericID
		WHERE 1 = 1
		<if test="drugID != null">
			AND drugID = #{drugID}
		</if>
		<if test="typeID != null">
			AND CD.typeID = #{typeID}
		</if>
		<if test="companyID != null">
			AND companyID = #{companyID}
		</if>
		<if test="drugName != null">
			AND LOWER(drugName) LIKE LOWER(CONCAT(#{drugName}, '%'))
		</if>
		<if test="genericName != null">
			AND LOWER(DG.genericDrugName) LIKE LOWER(CONCAT(#{genericName}, '%'))
		</if>
	</select>

	<select id="getByParam" parameterType="map" resultType="contentDrug">
		SELECT
		CD.`drugID`,
		CD.`typeID`,
		DT.name AS drugTypeName,
		CD.`genericID`,
		DG.genericDrugName,
		CD.`companyID`,
		DC.companyName,
		CD.`drugName`,
		CD.`strength`,
		CD.`updatedBy`,
		CD.`updatedOn`,
		CD.`createdBy`,
		CD.`createdOn`
		FROM `content_drug` CD
		JOIN doctor_feed.content_drug_type DT ON CD.typeID = DT.drugTypeID
		JOIN doctor_feed.content_drug_company DC ON CD.companyID = DC.drugCompanyID
		LEFT JOIN doctor_feed.content_drug_generic DG ON CD.genericID = DG.genericID
		WHERE 1 = 1
		<if test="drugID != null">
			AND drugID = #{drugID}
		</if>
		<if test="companyID != null">
			AND companyID = #{companyID}
		</if>
		<if test="genericID != null">
			AND CD.genericID = #{genericID}
		</if>
		<if test="typeID != null">
			AND CD.typeID = #{typeID}
		</if>
		<if test="term != null">
			AND LOWER(drugName) LIKE LOWER(CONCAT(#{term},'%'))
		</if>
		<if test="drugName != null">
			AND LOWER(drugName) LIKE LOWER(CONCAT(#{drugName}, '%'))
		</if>
		<if test="genericName != null">
			AND LOWER(DG.genericDrugName) LIKE LOWER(CONCAT(#{genericName}, '%'))
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM content_drug
		WHERE 1=1
		<if test="drugID != null">
			AND drugID = #{drugID}
		</if>
	</delete>


</mapper>