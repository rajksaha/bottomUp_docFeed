<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.PatientMapper">

	<insert id="create" parameterType="Patient" useGeneratedKeys="true" keyProperty="patientID" >

		INSERT INTO `patient`(
			`userID`,
			`patientCode`,
			`occupation`,
			`referredBy`,
			`hospitalName`,
			`bedNum`,
			`wardNum`,
			`headOfUnit`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{userID},
			#{patientCode},
			#{occupation},
			#{referredBy},
			#{hospitalName},
			#{bedNum},
			#{wardNum},
			#{headOfUnit},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);


	</insert>
	
	<update id="update" parameterType="Patient">
		UPDATE `patient`
		SET
		`userID` = #{userID},
		`patientCode` = #{patientCode},
		`occupation` = #{occupation},
		`referredBy` =#{referredBy},
		`hospitalName` = #{hospitalName},
		`bedNum` = #{bedNum},
		`wardNum` = #{wardNum},
		`headOfUnit` = #{headOfUnit},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE patientID = #{patientID}
	</update>

	<select id="getByID" parameterType="long" resultType="Patient">
		SELECT
			`patientID`,
			`userID`,
			`patientCode`,
			`occupation`,
			`referredBy`,
			`hospitalName`,
			`bedNum`,
			`wardNum`,
			`headOfUnit`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		FROM `patient`

		WHERE patientID = #{patientID}
	</select>

	<select id="getByParam" parameterType="map" resultType="Patient">
		SELECT
		`patientID`,
		`userID`,
		`patientCode`,
		`occupation`,
		`referredBy`,
		`hospitalName`,
		`bedNum`,
		`wardNum`,
		`headOfUnit`,
		`updatedBy`,
		`updatedOn`,
		`createdBy`,
		`createdOn`
		FROM `patient`
		WHERE 1 = 1
		<if test="patientID != null">
			AND patientID = #{patientID}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM patient
		WHERE 1=1
		<if test="patientID != null">
			AND patientID = #{patientID}
		</if>
	</delete>


	<select id="patientSearch" parameterType="map" resultType="PatientViewData">
		SELECT
			p.`patientID`,
			p.`userID`,
			p.`patientCode`,
			p.`occupation`,
			p.`referredBy`,
			p.`hospitalName`,
			p.`bedNum`,
			p.`wardNum`,
			p.`headOfUnit`,
			p.`updatedBy`,
			p.`updatedOn`,
			p.`createdBy`,
			p.`createdOn`,
			pup.firstName AS firstName,
			pup.lastName AS lastName,
			pup.address AS address,
			pup.contactNo AS contactNo,
			pup.dateOfBirth AS dateOfBirth,
			pup.sex AS sex
		FROM `patient` p
		JOIN bottom_up_user pu ON p.userID = pu.userID
		JOIN bottom_up_user_profile pup ON pu.userID = pup.userID
		WHERE 1 = 1
		<if test="patientID != null">
			AND patientID = #{patientID}
		</if>
		<if test="likePatientName != null">
			AND LOWER(pup.firstName) LIKE LOWER(CONCAT('%',#{term},'%')) LIMIT 20
		</if>
		<if test="likeContactNo != null">
			AND LOWER(pup.contactNo) LIKE LOWER(CONCAT('%',#{term},'%')) LIMIT 20
		</if>
		<if test="likePatientCode != null">
			AND LOWER(p.patientCode) LIKE LOWER(CONCAT('%',#{term},'%')) LIMIT 20
		</if>
	</select>


</mapper>