<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.PrescriptionInvMapper">

	<insert id="create" parameterType="prescriptionInv">

		<selectKey keyProperty="presInvID" resultType="String" order="BEFORE">
			select UUID()
		</selectKey>
		INSERT INTO `prescription_inv`(
			`presInvID`,
			`appointmentID`,
			`invID`,
			`note`,
			`checked`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{presInvID},
			#{appointmentID},
			#{invID},
			#{note},
			#{checked},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);


	</insert>

	<insert id="selectInsert" parameterType="map">

		INSERT INTO `prescription_inv`(
			`appointmentID`,
			`invID`,
			`note`,
			`checked`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
			SELECT
			#{newAppointmentID},
			pa.`invID`,
			pa.`note`,
			pa.`checked`,
			#{userName},
			NOW(),
			#{userName},
			NOW()
		FROM prescription_inv pa
		WHERE 1=1
		<if test="appointmentID != null">
			AND pa.appointmentID = #{appointmentID}
		</if>
		<if test="presInvID != null">
			AND pa.presInvID = #{presInvID}
		</if>
	</insert>
	
	<update id="update" parameterType="prescriptionInv">
		UPDATE `prescription_inv`
		SET
		`appointmentID` = #{appointmentID},
		`invID` = #{invID},
		`note` = #{note},
		`checked` =#{checked},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE presInvID = #{presInvID}
	</update>

	<select id="getByID" parameterType="string" resultType="prescriptionInv">
		SELECT
			pi.`presInvID`,
			pi.`appointmentID`,
			pi.`invID`,
			ci.name AS invName,
			pi.`note`,
			pi.`checked`,
			pi.`updatedBy`,
			pi.`updatedOn`,
			pi.`createdBy`,
			pi.`createdOn`
		FROM doctor_feed.`prescription_inv` pi
		JOIN doctor_feed.content_inv ci ON pi.invID = ci.invID

		WHERE pi.presInvID = #{presInvID}
	</select>

	<select id="getByParam" parameterType="map" resultType="prescriptionInv">
		SELECT
			pi.`presInvID`,
			pi.`appointmentID`,
			pi.`invID`,
			ci.name AS invName,
			pi.`note`,
			pi.`checked`,
			pi.`updatedBy`,
			pi.`updatedOn`,
			pi.`createdBy`,
			pi.`createdOn`
		FROM doctor_feed.`prescription_inv` pi
		JOIN doctor_feed.content_inv ci ON pi.invID = ci.invID
		WHERE 1 = 1
		<if test="presInvID != null">
			AND pi.presInvID = #{presInvID}
		</if>
		<if test="appointmentID != null">
			AND pi.appointmentID = #{appointmentID}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM prescription_inv
		WHERE 1=1
		<if test="presInvID != null">
			AND presInvID = #{presInvID}
		</if>
	</delete>


</mapper>