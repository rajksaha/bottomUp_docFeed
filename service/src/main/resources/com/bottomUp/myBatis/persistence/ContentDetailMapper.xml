<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.ContentDetailMapper">

	<insert id="create" parameterType="contentDetail" useGeneratedKeys="true" keyProperty="contentDetailID" >

		INSERT INTO `content_detail`(
			`entityType`,
			`entityID`,
			`shortName`,
			`longDesc`,
			`content`,
			`url`,
			`fileFormat`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{entityType},
			#{entityID},
			#{shortName},
			#{longDesc},
			#{content},
			#{url},
			#{fileFormat},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);


	</insert>

	<insert id="selectInsert" parameterType="map">

		INSERT INTO `content_detail`(
		`entityType`,
		`entityID`,
		`shortName`,
		`longDesc`,
		`content`,
		`url`,
		`fileFormat`,
		`updatedBy`,
		`updatedOn`,
		`createdBy`,
		`createdOn`
		)
		SELECT
		`entityType`,
		#{newAppointmentID},
		`shortName`,
		`longDesc`,
		`content`,
		`url`,
		`fileFormat`,
		#{userName},
		NOW(),
		#{userName},
		NOW()
		FROM content_detail pc
		WHERE 1=1
		<if test="entityType != null">
			AND pc.entityType = #{entityType}
		</if>
		<if test="appointmentID != null">
			AND pc.entityID = #{appointmentID}
		</if>
		<if test="contentDetailID != null">
			AND pc.contentDetailID = #{contentDetailID}
		</if>
	</insert>
	
	<update id="update" parameterType="contentDetail">
		UPDATE `content_detail`
		SET
		`entityType` = #{entityType},
		`entityID` = #{entityID},
		`shortName` = #{shortName},
		`longDesc` =#{longDesc},
		`content` =#{content},
		`url` =#{url},
		`fileFormat` =#{fileFormat},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE contentDetailID = #{contentDetailID}
	</update>

	<select id="getByID" parameterType="long" resultType="contentDetail">
		SELECT
		    `contentDetailID`,
			`entityType`,
			`entityID`,
			`shortName`,
			`longDesc`,
			`content`,
			`url`,
			`fileFormat`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		FROM `content_detail`

		WHERE contentDetailID = #{contentDetailID}
	</select>

	<select id="getByParam" parameterType="map" resultType="contentDetail">
		SELECT
		`contentDetailID`,
		`entityType`,
		`entityID`,
		`shortName`,
		`longDesc`,
		`content`,
		`url`,
		`fileFormat`,
		`updatedBy`,
		`updatedOn`,
		`createdBy`,
		`createdOn`
		FROM `content_detail`
		WHERE 1 = 1
		<if test="contentDetailID != null">
			AND contentDetailID = #{contentDetailID}
		</if>
		<if test="entityType != null">
			AND entityType = #{entityType}
		</if>
		<if test="entityID != null">
			AND entityID = #{entityID}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

	<select id="getDistinctShortName" parameterType="map" resultType="contentDetail">
		SELECT DISTINCT `shortName`
		FROM `content_detail`
		WHERE 1 = 1
		<if test="contentDetailID != null">
			AND contentDetailID = #{contentDetailID}
		</if>
		<if test="entityType != null">
			AND entityType = #{entityType}
		</if>
		<if test="term != null">
			AND LOWER(shortName) LIKE LOWER(CONCAT('%',#{term},'%')) LIMIT 20
		</if>
		<if test="entityID != null">
			AND entityID = #{entityID}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM content_detail
		WHERE 1=1
		<if test="contentDetailID != null">
			AND contentDetailID = #{contentDetailID}
		</if>
		<if test="entityType != null">
			AND entityType = #{entityType}
		</if>
		<if test="entityID != null">
			AND entityID = #{entityID}
		</if>
	</delete>


</mapper>