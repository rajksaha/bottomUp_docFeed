<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.AppointmentMapper">

	<insert id="create" parameterType="Appointment" useGeneratedKeys="true" keyProperty="appointmentID" >

		INSERT INTO `doctor_feed`.`appointment`(
			`doctorID`,
			`patientID`,
			`date`,
			`time`,
			`status`,
			`appointmentType`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{doctorID},
			#{patientID},
			#{date},
			#{time},
			#{status},
			#{appointmentType},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);


	</insert>
	
	<update id="update" parameterType="Appointment">
		UPDATE `doctor_feed`.`appointment`
		SET
		`doctorID` = #{doctorID},
		`patientID` = #{patientID},
		`date` = #{date},
		`time` =#{time},
		`status` = #{status},
		`appointmentType` = #{appointmentType},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE appointmentID = #{appointmentID}
	</update>

	<select id="getByID" parameterType="long" resultType="Appointment">
		SELECT
			`appointmentID`,
			`doctorID`,
			`patientID`,
			`date`,
			`time`,
			`status`,
			`appointmentType`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		FROM `doctor_feed`.`appointment`

		WHERE appointmentID = #{appointmentID}
	</select>

	<select id="getByParam" parameterType="map" resultType="Appointment">
		SELECT
		`appointmentID`,
		`doctorID`,
		`patientID`,
		`date`,
		`time`,
		`status`,
		`appointmentType`,
		`updatedBy`,
		`updatedOn`,
		`createdBy`,
		`createdOn`
		FROM `doctor_feed`.`appointment`
		WHERE 1 = 1
		<if test="appointmentID != null">
			AND appointmentID = #{appointmentID}
		</if>
		<if test="patientID != null">
			AND patientID = #{patientID}
		</if>
		<if test="doctorID != null">
			AND doctorID = #{doctorID}
		</if>
		<if test="date != null">
			AND date = #{date}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

	<select id="getCountByParam" parameterType="map" resultType="Long">
		SELECT COUNT(*)
		FROM `doctor_feed`.`appointment`
		WHERE 1 = 1
		<if test="appointmentID != null">
			AND appointmentID = #{appointmentID}
		</if>
		<if test="patientID != null">
			AND patientID = #{patientID}
		</if>
		<if test="doctorID != null">
			AND doctorID = #{doctorID}
		</if>
		<if test="date != null">
			AND date = #{date}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	<delete id="delete" parameterType="map">
		DELETE  FROM `doctor_feed`.appointment
		WHERE 1=1
		<if test="appointmentID != null">
			AND appointmentID = #{appointmentID}
		</if>
	</delete>


</mapper>