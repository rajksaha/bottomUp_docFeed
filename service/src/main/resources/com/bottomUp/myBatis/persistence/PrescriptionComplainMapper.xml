<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.PrescriptionComplainMapper">

	<insert id="create" parameterType="prescriptionComplain">

		<selectKey keyProperty="complainID" resultType="String" order="BEFORE">
			select UUID()
		</selectKey>
		INSERT INTO `prescription_complain`(
			`complainID`,
			`appointmentID`,
			`symptomID`,
			`durationNum`,
			`durationType`,
			`detail`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{complainID},
			#{appointmentID},
			#{symptomID},
			#{durationNum},
			#{durationType},
			#{detail},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);
	</insert>

	<insert id="selectInsert" parameterType="map">

		INSERT INTO `prescription_complain`(
			`appointmentID`,
			`symptomID`,
			`durationNum`,
			`durationType`,
			`detail`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
			)
		SELECT
			#{newAppointmentID},
			pc.`symptomID`,
			pc.`durationNum`,
			pc.`durationType`,
			pc.`detail`,
			#{userName},
			NOW(),
			#{userName},
			NOW()
		FROM prescription_complain pc
		WHERE 1=1
		<if test="appointmentID != null">
			AND pc.appointmentID = #{appointmentID}
		</if>
		<if test="complainID != null">
			AND pc.complainID = #{complainID}
		</if>
	</insert>
	
	<update id="update" parameterType="prescriptionComplain">
		UPDATE `prescription_complain`
		SET
		`appointmentID` = #{appointmentID},
		`symptomID` = #{symptomID},
		`durationNum` = #{durationNum},
		`durationType` =#{durationType},
		`detail` = #{detail},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE complainID = #{complainID}
	</update>

	<select id="getByID" parameterType="string" resultType="prescriptionComplain">
		SELECT
			pc.`complainID`,
			pc.`appointmentID`,
			pc.`symptomID`,
			cs.symptomName,
			pc.`durationNum`,
			pc.`durationType`,
			pc.`detail`,
			pc.`updatedBy`,
			pc.`updatedOn`,
			pc.`createdBy`,
			pc.`createdOn`
		FROM doctor_feed.`prescription_complain` pc
		JOIN doctor_feed.content_symptom cs ON pc.symptomID = cs.symptomID
		WHERE pc.complainID = #{complainID}
	</select>

	<select id="getByParam" parameterType="map" resultType="prescriptionComplain">
		SELECT
			pc.`complainID`,
			pc.`appointmentID`,
			pc.`symptomID`,
			cs.symptomName,
			pc.`durationNum`,
			pc.`durationType`,
			pc.`detail`,
			pc.`updatedBy`,
			pc.`updatedOn`,
			pc.`createdBy`,
			pc.`createdOn`
		FROM doctor_feed.`prescription_complain` pc
		JOIN doctor_feed.content_symptom cs ON pc.symptomID = cs.symptomID
		LEFT JOIN doctor_feed.content_duration_type CDT ON pc.durationType = CDT.durationType
		WHERE 1 = 1
		<if test="complainID != null">
			AND pc.complainID = #{complainID}
		</if>
		<if test="appointmentID != null">
			AND pc.appointmentID = #{appointmentID}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM prescription_complain
		WHERE 1=1
		<if test="complainID != null">
			AND complainID = #{complainID}
		</if>
	</delete>


</mapper>