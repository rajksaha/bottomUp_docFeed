<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.UserProfileMapper">



	<insert id="create" parameterType="UserProfile"  useGeneratedKeys="true" keyProperty="userProfileID">

		INSERT INTO `bottom_up_user_profile`
		(
			`userID`,
			`firstName`,
			`lastName`,
			`emailAddress`,
			`sex`,
			`dateOfBirth`,
			`doctorID`,
			`contactNo`,
			`address`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES
		(
			#{userID},
			#{firstName},
			#{lastName},
			#{emailAddress},
			#{sex},
			#{dateOfBirth},
			#{doctorID},
			#{contactNo},
			#{address},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		)


	</insert>
	
	<update id="update" parameterType="UserProfile">

		UPDATE `bottom_up_user_profile`
		SET
			`firstName` = #{firstName},
			`lastName` = #{lastName},
			`sex` = #{sex},
			`emailAddress` = #{emailAddress},
			`dateOfBirth` = #{dateOfBirth},
			`doctorID` = #{doctorID},
			`contactNo` = #{contactNo},
			`address` = #{address},
			`updatedBy` = #{updatedBy},
			`updatedOn` = #{updatedOn}
		WHERE `userID` = #{userID}

	</update>

	<select id="getUserProfileByID" parameterType="long" resultType="UserProfile">

		SELECT
			`eup`.`userProfileID`,
			`eup`.`userID`,
			`eup`.`firstName`,
			`eup`.`lastName`,
			`eup`.`sex`,
			`eup`.`emailAddress`,
			`eup`.`dateOfBirth`,
			`eup`.`doctorID`,
			`eup`.`contactNo`,
			`eup`.`address`,
			`eup`.`updatedBy`,
			`eup`.`updatedOn`,
			`eup`.`createdBy`,
			`eup`.`createdOn`,
			eu.status AS status,
			eu.userName AS userName,
			eu.companyID AS companyID
		FROM `bottom_up_user_profile` eup
		JOIN `bottom_up_user` eu ON eup.userID = eu.userID
		WHERE eup.userID = #{userID}

	</select>

	<select id="getUserProfileByParam" parameterType="map" resultType="UserProfile">

		SELECT
			`eup`.`userProfileID`,
			`eup`.`userID`,
			`eup`.`firstName`,
			`eup`.`lastName`,
			`eup`.`sex`,
			`eup`.`emailAddress`,
			`eup`.`dateOfBirth`,
			`eup`.`doctorID`,
			`eup`.`contactNo`,
			`eup`.`address`,
			`eup`.`updatedBy`,
			`eup`.`updatedOn`,
			`eup`.`createdBy`,
			`eup`.`createdOn`,
			eu.status AS status,
			eu.userName AS userName,
			eu.companyID AS companyID
		FROM `bottom_up_user_profile` eup
		JOIN `bottom_up_user` eu ON eup.userID = eu.userID
		WHERE 1 = 1
		<if test="userProfileID != null">
			AND eup.userProfileID = #{userProfileID}
		</if>
		<if test="userID != null">
			AND eup.userID = #{userID}
		</if>
		<if test="userName != null">
			AND eu.userName = #{userName}
		</if>
		<if test="companyID != null">
			AND eu.companyID = #{companyID}
		</if>
		<if test="doctorID != null">
			AND eup.doctorID = #{doctorID}
		</if>
		<if test="likeFirstName != null">
			AND LOWER(eup.firstName) LIKE LOWER(CONCAT('%',#{likeFirstName},'%')) LIMIT 20
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>

	</select>

	<select id="getUserCountByParam" parameterType="map" resultType="int">

		SELECT COUNT(eup.userID)
		FROM `bottom_up_user_profile` eup
		JOIN `bottom_up_user` eu ON eup.userID = eu.userID
		WHERE 1 = 1
		<if test="userProfileID != null">
			AND eup.userProfileID = #{userProfileID}
		</if>
		<if test="userID != null">
			AND eup.userID = #{userID}
		</if>
		<if test="companyID != null">
			AND eu.companyID = #{companyID}
		</if>
		<if test="userType != null">
			AND eup.userType = #{userType}
		</if>
		<if test="employeeCode != null">
			AND eup.employeeCode = #{employeeCode}
		</if>
	</select>
</mapper>