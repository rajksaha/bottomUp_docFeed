<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bottomUp.myBatis.persistence.PrescriptionDiagnosisMapper">

	<insert id="create" parameterType="prescriptionDiagnosis" useGeneratedKeys="true" keyProperty="diagnosisID" >

		INSERT INTO `prescription_diagnosis`(
			`appointmentID`,
			`diseaseID`,
			`note`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		VALUES(
			#{appointmentID},
			#{diseaseID},
			#{note},
			#{updatedBy},
			#{updatedOn},
			#{createdBy},
			#{createdOn}
		);


	</insert>

	<insert id="selectInsert" parameterType="map">

		INSERT INTO `prescription_diagnosis`(
			`appointmentID`,
			`diseaseID`,
			`note`,
			`updatedBy`,
			`updatedOn`,
			`createdBy`,
			`createdOn`
		)
		SELECT
			#{newAppointmentID},
			pc.`diseaseID`,
			pc.`note`,
			#{userName},
			NOW(),
			#{userName},
			NOW()
		FROM prescription_diagnosis pc
		WHERE 1=1
		<if test="appointmentID != null">
			AND pc.appointmentID = #{appointmentID}
		</if>
		<if test="diagnosisID != null">
			AND pc.diagnosisID = #{diagnosisID}
		</if>
	</insert>
	
	<update id="update" parameterType="prescriptionDiagnosis">
		UPDATE `prescription_diagnosis`
		SET
		`appointmentID` = #{appointmentID},
		`diseaseID` = #{diseaseID},
		`note` = #{note},
		`updatedBy` = #{updatedBy},
		`updatedOn` = #{updatedOn}
		WHERE diagnosisID = #{diagnosisID}
	</update>

	<select id="getByID" parameterType="long" resultType="prescriptionDiagnosis">
		SELECT
			pd.`diagnosisID`,
			pd.`appointmentID`,
			pd.`diseaseID`,
			cd.diseaseName AS diseaseName,
			pd.`note`,
			pd.`updatedBy`,
			pd.`updatedOn`,
			pd.`createdBy`,
			pd.`createdOn`
		FROM doctor_feed.`prescription_diagnosis` pd
		JOIN doctor_feed.content_disease cd ON pd.diseaseID = cd.diseaseID
		WHERE pd.diagnosisID = #{diagnosisID}
	</select>

	<select id="getByAppointmentID" parameterType="long" resultType="prescriptionDiagnosis">
		SELECT
		pd.`diagnosisID`,
		pd.`appointmentID`,
		pd.`diseaseID`,
		cd.diseaseName AS diseaseName,
		pd.`note`,
		pd.`updatedBy`,
		pd.`updatedOn`,
		pd.`createdBy`,
		pd.`createdOn`
		FROM doctor_feed.`prescription_diagnosis` pd
		JOIN doctor_feed.content_disease cd ON pd.diseaseID = cd.diseaseID
		WHERE pd.appointmentID = #{appointmentID}
	</select>

	<select id="getByParam" parameterType="map" resultType="prescriptionDiagnosis">
		SELECT
			pd.`diagnosisID`,
			pd.`appointmentID`,
			pd.`diseaseID`,
			cd.diseaseName AS diseaseName,
			pd.`note`,
			pd.`updatedBy`,
			pd.`updatedOn`,
			pd.`createdBy`,
			pd.`createdOn`
		FROM doctor_feed.`prescription_diagnosis` pd
		JOIN doctor_feed.content_disease cd ON pd.diseaseID = cd.diseaseID
		WHERE 1 = 1
		<if test="diagnosisID != null">
			AND pd.diagnosisID = #{diagnosisID}
		</if>
		<if test="appointmentID != null">
			AND pd.appointmentID = #{appointmentID}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM prescription_diagnosis
		WHERE 1=1
		<if test="diagnosisID != null">
			AND diagnosisID = #{diagnosisID}
		</if>
	</delete>


</mapper>